# The Graph Schema for Chimera DevMatch Marketplace
# Indexes events from Marketplace.sol for The Graph track prize

"""
AI Agent entity representing agents created on the marketplace
"""
type Agent @entity {
  "Agent ID from contract"
  id: ID!
  "Agent name"
  name: String!
  "Agent description"
  description: String!
  "Agent tags for categorization"
  tags: [String!]!
  "IPFS hash for agent files"
  ipfsHash: String!
  "Agent creator address"
  creator: Bytes!
  "Whether agent is private"
  isPrivate: Boolean!
  "Total ETH staked on this agent"
  totalStaked: BigInt!
  "Number of loves received"
  loves: BigInt!
  "Creation timestamp"
  createdAt: BigInt!
  "Last updated timestamp"
  updatedAt: BigInt!
  "Calculated ranking score: (totalStaked / 1e18) + (loves * 0.1)"
  rankingScore: BigDecimal!
  "Creator entity reference"
  creatorEntity: Creator!
  "Stakes on this agent"
  stakes: [Stake!]! @derivedFrom(field: "agent")
  "Loves on this agent"
  agentLoves: [AgentLove!]! @derivedFrom(field: "agent")
  "Access grants for private agents"
  accessGrants: [AgentAccess!]! @derivedFrom(field: "agent")
  "Daily stats for this agent"
  dailyStats: [DailyAgentStats!]! @derivedFrom(field: "agent")
}

"""
Individual stake transaction
"""
type Stake @entity {
  "Unique ID: agentId-staker-blockNumber"
  id: ID!
  "Agent being staked on"
  agent: Agent!
  "Address of staker"
  staker: Bytes!
  "Amount staked in wei"
  amount: BigInt!
  "Block timestamp"
  timestamp: BigInt!
  "Block number"
  blockNumber: BigInt!
  "Transaction hash"
  transactionHash: Bytes!
}

"""
Agent love/like action
"""
type AgentLove @entity {
  "Unique ID: agentId-user-blockNumber"
  id: ID!
  "Agent being loved"
  agent: Agent!
  "User who loved the agent"
  user: Bytes!
  "Block timestamp"
  timestamp: BigInt!
  "Block number"
  blockNumber: BigInt!
  "Transaction hash"
  transactionHash: Bytes!
}

"""
Access grant for private agents
"""
type AgentAccess @entity {
  "Unique ID: agentId-user"
  id: ID!
  "Agent with granted access"
  agent: Agent!
  "User granted access"
  user: Bytes!
  "Grant timestamp"
  timestamp: BigInt!
  "Block number"
  blockNumber: BigInt!
  "Transaction hash"
  transactionHash: Bytes!
}

"""
Creator aggregated statistics
"""
type Creator @entity {
  "Creator address"
  id: ID!
  "Total agents created"
  totalAgents: BigInt!
  "Total ETH earned (70% of stakes)"
  totalEarned: BigInt!
  "Total stakes received across all agents"
  totalStakes: BigInt!
  "Total loves received across all agents"
  totalLoves: BigInt!
  "First agent creation timestamp"
  firstAgentAt: BigInt!
  "Last activity timestamp"
  lastActivityAt: BigInt!
  "Creator's agents"
  agents: [Agent!]! @derivedFrom(field: "creatorEntity")
}

"""
Daily aggregated statistics for the entire marketplace
"""
type DailyStats @entity {
  "Date in YYYY-MM-DD format"
  id: ID!
  "Date as timestamp (start of day)"
  date: BigInt!
  "New agents created this day"
  newAgents: BigInt!
  "Total stakes made this day"
  totalStakes: BigInt!
  "Total ETH staked this day"
  totalStakedAmount: BigInt!
  "Total loves given this day"
  totalLoves: BigInt!
  "Unique stakers this day"
  uniqueStakers: BigInt!
  "Unique creators active this day"
  uniqueCreators: BigInt!
  "Average stake amount this day"
  avgStakeAmount: BigDecimal!
}

"""
Daily statistics for individual agents
"""
type DailyAgentStats @entity {
  "agentId-YYYY-MM-DD"
  id: ID!
  "Agent reference"
  agent: Agent!
  "Date as timestamp (start of day)"
  date: BigInt!
  "Stakes received this day"
  stakesCount: BigInt!
  "ETH staked this day"
  stakedAmount: BigInt!
  "Loves received this day"
  lovesCount: BigInt!
  "Unique stakers this day"
  uniqueStakers: BigInt!
}

"""
Global marketplace statistics
"""
type MarketplaceStats @entity {
  "Singleton ID: 'marketplace'"
  id: ID!
  "Total agents ever created"
  totalAgents: BigInt!
  "Total stakes ever made"
  totalStakes: BigInt!
  "Total ETH ever staked"
  totalStakedAmount: BigInt!
  "Total loves ever given"
  totalLoves: BigInt!
  "Total unique creators"
  totalCreators: BigInt!
  "Total unique stakers"
  totalStakers: BigInt!
  "Last updated block"
  lastUpdatedBlock: BigInt!
  "Last updated timestamp"
  lastUpdatedTimestamp: BigInt!
}

"""
Product entity (legacy support for existing ProductListed events)
"""
type Product @entity {
  "Product ID from contract"
  id: ID!
  "Product name"
  name: String!
  "Product description"
  description: String!
  "Product price in wei"
  price: BigInt!
  "Product category"
  category: String!
  "Product creator"
  creator: Bytes!
  "Total staked on product"
  totalStaked: BigInt!
  "Number of loves"
  loves: BigInt!
  "Whether product is active"
  active: Boolean!
  "Creation timestamp"
  createdAt: BigInt!
  "Product purchases"
  purchases: [ProductPurchase!]! @derivedFrom(field: "product")
  "Stakes on this product"
  productStakes: [ProductStake!]! @derivedFrom(field: "product")
}

"""
Product purchase transaction
"""
type ProductPurchase @entity {
  "Unique ID: productId-buyer-blockNumber"
  id: ID!
  "Product purchased"
  product: Product!
  "Buyer address"
  buyer: Bytes!
  "Purchase price"
  price: BigInt!
  "Purchase timestamp"
  timestamp: BigInt!
  "Block number"
  blockNumber: BigInt!
  "Transaction hash"
  transactionHash: Bytes!
}

"""
Product stake transaction
"""
type ProductStake @entity {
  "Unique ID: productId-staker-blockNumber"
  id: ID!
  "Product being staked on"
  product: Product!
  "Address of staker"
  staker: Bytes!
  "Amount staked in wei"
  amount: BigInt!
  "Block timestamp"
  timestamp: BigInt!
  "Block number"
  blockNumber: BigInt!
  "Transaction hash"
  transactionHash: Bytes!
}