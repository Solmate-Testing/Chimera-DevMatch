/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { USDC, USDCInterface } from "../../contracts/USDC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526005805460ff60a01b1916600360a11b1790553480156200002457600080fd5b5033604051806040016040528060088152602001672aa9a21021b7b4b760c11b815250604051806040016040528060048152602001635553444360e01b815250816003908162000075919062000342565b50600462000084828262000342565b5050506001600160a01b038116620000b757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000c281620000da565b50620000d43364e8d4a510006200012c565b62000436565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001585760405163ec442f0560e01b815260006004820152602401620000ae565b62000166600083836200016a565b5050565b6001600160a01b038316620001995780600260008282546200018d91906200040e565b909155506200020d9050565b6001600160a01b03831660009081526020819052604090205481811015620001ee5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000ae565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200022b576002805482900390556200024a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200029091815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002c857607f821691505b602082108103620002e957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033d57600081815260208120601f850160051c81016020861015620003185750805b601f850160051c820191505b81811015620003395782815560010162000324565b5050505b505050565b81516001600160401b038111156200035e576200035e6200029d565b62000376816200036f8454620002b3565b84620002ef565b602080601f831160018114620003ae5760008415620003955750858301515b600019600386901b1c1916600185901b17855562000339565b600085815260208120601f198616915b82811015620003df57888601518255948401946001909101908401620003be565b5085821015620003fe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200043057634e487b7160e01b600052601160045260246000fd5b92915050565b61096880620004466000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a9059cbb11610066578063a9059cbb146101dd578063dd62ed3e146101f0578063de5f72fd14610229578063f2fde38b1461023157600080fd5b8063715018a6146101b25780638da5cb5b146101ba57806395d89b41146101d557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806340c10f191461017457806370a082311461018957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610244565b60405161010491906107b2565b60405180910390f35b61012061011b36600461081c565b6102d6565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610846565b6102f0565b600554600160a01b900460ff1660405160ff9091168152602001610104565b61018761018236600461081c565b610314565b005b610134610197366004610882565b6001600160a01b031660009081526020819052604090205490565b61018761032a565b6005546040516001600160a01b039091168152602001610104565b6100f761033e565b6101206101eb36600461081c565b61034d565b6101346101fe3660046108a4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018761035b565b61018761023f366004610882565b6103d0565b606060038054610253906108d7565b80601f016020809104026020016040519081016040528092919081815260200182805461027f906108d7565b80156102cc5780601f106102a1576101008083540402835291602001916102cc565b820191906000526020600020905b8154815290600101906020018083116102af57829003601f168201915b5050505050905090565b6000336102e481858561040e565b60019150505b92915050565b6000336102fe858285610420565b61030985858561049f565b506001949350505050565b61031c6104fe565b610326828261052b565b5050565b6103326104fe565b61033c6000610561565b565b606060048054610253906108d7565b6000336102e481858561049f565b33600090815260208190526040902054633b9aca00116103c25760405162461bcd60e51b815260206004820152601860248201527f416c7265616479206861766520656e6f7567682055534443000000000000000060448201526064015b60405180910390fd5b61033c33633b9aca0061052b565b6103d86104fe565b6001600160a01b03811661040257604051631e4fbdf760e01b8152600060048201526024016103b9565b61040b81610561565b50565b61041b83838360016105b3565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610499578181101561048a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103b9565b610499848484840360006105b3565b50505050565b6001600160a01b0383166104c957604051634b637e8f60e11b8152600060048201526024016103b9565b6001600160a01b0382166104f35760405163ec442f0560e01b8152600060048201526024016103b9565b61041b838383610688565b6005546001600160a01b0316331461033c5760405163118cdaa760e01b81523360048201526024016103b9565b6001600160a01b0382166105555760405163ec442f0560e01b8152600060048201526024016103b9565b61032660008383610688565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105dd5760405163e602df0560e01b8152600060048201526024016103b9565b6001600160a01b03831661060757604051634a1406b160e11b8152600060048201526024016103b9565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561049957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161067a91815260200190565b60405180910390a350505050565b6001600160a01b0383166106b35780600260008282546106a89190610911565b909155506107259050565b6001600160a01b038316600090815260208190526040902054818110156107065760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103b9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661074157600280548290039055610760565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107a591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107df578581018301518582016040015282016107c3565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461081757600080fd5b919050565b6000806040838503121561082f57600080fd5b61083883610800565b946020939093013593505050565b60008060006060848603121561085b57600080fd5b61086484610800565b925061087260208501610800565b9150604084013590509250925092565b60006020828403121561089457600080fd5b61089d82610800565b9392505050565b600080604083850312156108b757600080fd5b6108c083610800565b91506108ce60208401610800565b90509250929050565b600181811c908216806108eb57607f821691505b60208210810361090b57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ea57634e487b7160e01b600052601160045260246000fdfea2646970667358221220ad3ed8114ec8de92c35d4dc21add72d3d160727774801d866988045329b3ea7564736f6c63430008140033";

type USDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDC__factory extends ContractFactory {
  constructor(...args: USDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      USDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): USDC__factory {
    return super.connect(runner) as USDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCInterface {
    return new Interface(_abi) as USDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): USDC {
    return new Contract(address, _abi, runner) as unknown as USDC;
  }
}
