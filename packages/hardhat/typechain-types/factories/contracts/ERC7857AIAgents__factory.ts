/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC7857AIAgents,
  ERC7857AIAgentsInterface,
} from "../../contracts/ERC7857AIAgents";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC7857DataVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AuthorizedUsage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Cloned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "dataHashes",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "dataDescriptions",
        type: "string[]",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "sealedKey",
        type: "bytes",
      },
    ],
    name: "PublishedSealedKey",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Transferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "oldDataHashes",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "newDataHashes",
        type: "bytes32[]",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "authorizeUsage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "authorizedUsersOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "proofs",
        type: "bytes[]",
      },
    ],
    name: "clone",
    outputs: [
      {
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "dataDescriptionsOf",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "dataHashesOf",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "proofs",
        type: "bytes[]",
      },
      {
        internalType: "string[]",
        name: "dataDescriptions",
        type: "string[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "proofs",
        type: "bytes[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IERC7857DataVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200238c3803806200238c83398101604081905261003191610042565b6001600160a01b0316608052610072565b60006020828403121561005457600080fd5b81516001600160a01b038116811461006b57600080fd5b9392505050565b6080516122e9620000a360003960008181610164015281816105ea01528181610cca01526110ed01526122e96000f3fe6080604052600436106100a75760003560e01c80637a005b36116100645780637a005b36146101df57806395d89b411461020c578063c87b56dd1461023b578063dfdad7de1461025b578063ea1dbcda1461027d578063fa83d14e1461029057600080fd5b806306fdde03146100ac5780630beef18f146100f85780631aeb542f146101255780632b7ac3f3146101525780636352211e1461019e5780637289fdd6146101be575b600080fd5b3480156100b857600080fd5b5060408051808201909152601181527045524337383537204149204167656e747360781b60208201525b6040516100ef919061185e565b60405180910390f35b34801561010457600080fd5b50610118610113366004611878565b6102b0565b6040516100ef9190611891565b34801561013157600080fd5b50610145610140366004611878565b6103c1565b6040516100ef91906118f3565b34801561015e57600080fd5b506101867f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ef565b3480156101aa57600080fd5b506101866101b9366004611878565b610453565b6101d16101cc3660046119a7565b610499565b6040519081526020016100ef565b3480156101eb57600080fd5b506101ff6101fa366004611878565b610aa1565b6040516100ef9190611a3b565b34801561021857600080fd5b5060408051808201909152600681526541493738353760d01b60208201526100e2565b34801561024757600080fd5b506100e2610256366004611878565b610b25565b34801561026757600080fd5b5061027b6102763660046119a7565b610b7b565b005b6101d161028b366004611a4e565b611011565b34801561029c57600080fd5b5061027b6102ab366004611aad565b6113f3565b60606102bb82611585565b6102e05760405162461bcd60e51b81526004016102d790611ad9565b60405180910390fd5b60008281526020818152604080832060010180548251818502810185019093528083529193909284015b828210156103b657838290600052602060002001805461032990611b07565b80601f016020809104026020016040519081016040528092919081815260200182805461035590611b07565b80156103a25780601f10610377576101008083540402835291602001916103a2565b820191906000526020600020905b81548152906001019060200180831161038557829003601f168201915b50505050508152602001906001019061030a565b505050509050919050565b60606103cc82611585565b6103e85760405162461bcd60e51b81526004016102d790611ad9565b600082815260208181526040918290206003018054835181840281018401909452808452909183018282801561044757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610429575b50505050509050919050565b600061045e82611585565b61047a5760405162461bcd60e51b81526004016102d790611ad9565b506000908152602081905260409020600201546001600160a01b031690565b60006104a484611585565b6104c05760405162461bcd60e51b81526004016102d790611ad9565b6000848152602081905260409020600201546001600160a01b031633146104f95760405162461bcd60e51b81526004016102d790611b41565b6001600160a01b0385166105435760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016102d7565b6000848152602081905260409020805483146105955760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642070726f6f667360781b60448201526064016102d7565b6000836001600160401b038111156105af576105af611b6a565b6040519080825280602002602001820160405280156105d8578160200160208202803683370190505b50905060005b848110156108585760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663043153f388888581811061062957610629611b80565b905060200281019061063b9190611b96565b6040518363ffffffff1660e01b8152600401610658929190611c05565b6000604051808303816000875af1158015610677573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261069f9190810190611d7b565b905080608001516106e85760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21031b637b73290383937b7b360691b60448201526064016102d7565b8051516001148015610736575083600001828154811061070a5761070a611b80565b9060005260206000200154816000015160008151811061072c5761072c611b80565b6020026020010151145b6107725760405162461bcd60e51b815260206004820152600d60248201526c090c2e6d040dad2e6dac2e8c6d609b1b60448201526064016102d7565b8060200151516001146107c25760405162461bcd60e51b815260206004820152601860248201527708af0e0cac6e8cac840e6d2dcced8ca40dccaee40d0c2e6d60431b60448201526064016102d7565b80602001516000815181106107d9576107d9611b80565b60200260200101518383815181106107f3576107f3611b80565b60200260200101818152505087896001600160a01b03167fe84722491f3bdcdb07d8dacf7834975aa6a8a396ac8290dae5c3b9f57dad9168836060015160405161083d919061185e565b60405180910390a3508061085081611e7a565b9150506105de565b506002805490600061086983611e7a565b9190505592506040518060c0016040528082815260200183600101805480602002602001604051908101604052809291908181526020016000905b828210156109505783829060005260206000200180546108c390611b07565b80601f01602080910402602001604051908101604052809291908181526020018280546108ef90611b07565b801561093c5780601f106109115761010080835404028352916020019161093c565b820191906000526020600020905b81548152906001019060200180831161091f57829003601f168201915b5050505050815260200190600101906108a4565b505050908252506001600160a01b03891660208201526040016000604051908082528060200260200182016040528015610994578160200160208202803683370190505b50815242602080830191909152600585015460ff1615156040928301526000868152808252919091208251805191926109d2928492909101906116ad565b5060208281015180516109eb92600185019201906116f8565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201518051610a2d91600384019160209091019061174a565b506080820151600482015560a0909101516005909101805460ff1916911515919091179055604080513381526001600160a01b0389166020820152849188917f40b442ee2bb535802063305b95f127b5101e5fce261a5dec9379683eaaad8cdb910160405180910390a35050949350505050565b6060610aac82611585565b610ac85760405162461bcd60e51b81526004016102d790611ad9565b600082815260208181526040918290208054835181840281018401909452808452909183018282801561044757602002820191906000526020600020905b815481526020019060010190808311610b065750505050509050919050565b6060610b3082611585565b610b4c5760405162461bcd60e51b81526004016102d790611ad9565b610b55826115a5565b604051602001610b659190611e93565b6040516020818303038152906040529050919050565b610b8483611585565b610ba05760405162461bcd60e51b81526004016102d790611ad9565b6000838152602081905260409020600201546001600160a01b03163314610bd95760405162461bcd60e51b81526004016102d790611b41565b6001600160a01b038416610c235760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016102d7565b600083815260208190526040902080548214610c755760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642070726f6f667360781b60448201526064016102d7565b6000826001600160401b03811115610c8f57610c8f611b6a565b604051908082528060200260200182016040528015610cb8578160200160208202803683370190505b50905060005b83811015610f3b5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663043153f3878785818110610d0957610d09611b80565b9050602002810190610d1b9190611b96565b6040518363ffffffff1660e01b8152600401610d38929190611c05565b6000604051808303816000875af1158015610d57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d7f9190810190611d7b565b90508060800151610dcb5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103a3930b739b332b910383937b7b360511b60448201526064016102d7565b8051516001148015610e195750836000018281548110610ded57610ded611b80565b90600052602060002001548160000151600081518110610e0f57610e0f611b80565b6020026020010151145b610e555760405162461bcd60e51b815260206004820152600d60248201526c090c2e6d040dad2e6dac2e8c6d609b1b60448201526064016102d7565b806020015151600114610ea55760405162461bcd60e51b815260206004820152601860248201527708af0e0cac6e8cac840e6d2dcced8ca40dccaee40d0c2e6d60431b60448201526064016102d7565b8060200151600081518110610ebc57610ebc611b80565b6020026020010151838381518110610ed657610ed6611b80565b60200260200101818152505086886001600160a01b03167fe84722491f3bdcdb07d8dacf7834975aa6a8a396ac8290dae5c3b9f57dad91688360600151604051610f20919061185e565b60405180910390a35080610f3381611e7a565b915050610cbe565b50847f51fa73895ca2bd4c7f525775384b199b6047f069e662b82aa9e1b0998b9c29758360000183604051610f71929190611eeb565b60405180910390a28051610f8b90839060208401906116ad565b506002820180546001600160a01b0319166001600160a01b0388161790556040805160008152602081019182905251610fc891600385019161174a565b506040518581526001600160a01b0387169033907f0ea8df787dde63a7bdc34d17097adf25749a3521f660e92dabdff8d6ee91d18a9060200160405180910390a3505050505050565b6000836110555760405162461bcd60e51b8152602060048201526012602482015271139bc81c1c9bdbd99cc81c1c9bdd9a59195960721b60448201526064016102d7565b8382146110985760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b60448201526064016102d7565b6000846001600160401b038111156110b2576110b2611b6a565b6040519080825280602002602001820160405280156110db578160200160208202803683370190505b50905060005b858110156112895760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fbf8f60689898581811061112c5761112c611b80565b905060200281019061113e9190611b96565b6040518363ffffffff1660e01b815260040161115b929190611c05565b6000604051808303816000875af115801561117a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111a29190810190611f4a565b905080602001516111f55760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206f776e6572736869702070726f6f6600000000000000000060448201526064016102d7565b80515160011461123e5760405162461bcd60e51b815260206004820152601460248201527308af0e0cac6e8cac840e6d2dcced8ca40d0c2e6d60631b60448201526064016102d7565b8051805160009061125157611251611b80565b602002602001015183838151811061126b5761126b611b80565b6020908102919091010152508061128181611e7a565b9150506110e1565b506002805490600061129a83611e7a565b9190505591506040518060c001604052808281526020018585906112be9190611fdd565b815233602082015260400160006040519080825280602002602001820160405280156112f4578160200160208202803683370190505b50815242602080830191909152600060409283018190528581528082529190912082518051919261132a928492909101906116ad565b50602082810151805161134392600185019201906116f8565b5060408201516002820180546001600160a01b0319166001600160a01b039092169190911790556060820151805161138591600384019160209091019061174a565b506080820151600482015560a0909101516005909101805460ff1916911515919091179055604051339083907f0cb244c5bae39fd9d97a96aadece7e0a9cc2cf310036306ef0509603694324ff906113e29085908990899061208c565b60405180910390a350949350505050565b6113fc82611585565b6114185760405162461bcd60e51b81526004016102d790611ad9565b6000828152602081905260409020600201546001600160a01b031633146114515760405162461bcd60e51b81526004016102d790611b41565b6001600160a01b0381166114965760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103ab9b2b960a11b60448201526064016102d7565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16156114fe5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e48185d5d1a1bdc9a5e995960721b60448201526064016102d7565b60008281526001602081815260408084206001600160a01b038616808652908352818520805460ff19168517905586855284835281852060030180549485018155855291842090920180546001600160a01b031916821790559051909184917f32a4407627195670dd4c989ee38441e11ab643ccd4759c25d9c0bd6a635039db9190a35050565b6000908152602081905260409020600201546001600160a01b0316151590565b6060816000036115cc5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156115f657806115e081611e7a565b91506115ef9050600a83612151565b91506115d0565b6000816001600160401b0381111561161057611610611b6a565b6040519080825280601f01601f19166020018201604052801561163a576020820181803683370190505b5090505b84156116a55761164f600183612165565b915061165c600a8661217e565b611667906030612192565b60f81b81838151811061167c5761167c611b80565b60200101906001600160f81b031916908160001a90535061169e600a86612151565b945061163e565b949350505050565b8280548282559060005260206000209081019282156116e8579160200282015b828111156116e85782518255916020019190600101906116cd565b506116f492915061179f565b5090565b82805482825590600052602060002090810192821561173e579160200282015b8281111561173e578251829061172e90826121f4565b5091602001919060010190611718565b506116f49291506117b4565b8280548282559060005260206000209081019282156116e8579160200282015b828111156116e857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061176a565b5b808211156116f457600081556001016117a0565b808211156116f45760006117c882826117d1565b506001016117b4565b5080546117dd90611b07565b6000825580601f106117ed575050565b601f01602090049060005260206000209081019061180b919061179f565b50565b60005b83811015611829578181015183820152602001611811565b50506000910152565b6000815180845261184a81602086016020860161180e565b601f01601f19169290920160200192915050565b6020815260006118716020830184611832565b9392505050565b60006020828403121561188a57600080fd5b5035919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156118e657603f198886030184526118d4858351611832565b945092850192908501906001016118b8565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156119345783516001600160a01b03168352928401929184019160010161190f565b50909695505050505050565b80356001600160a01b038116811461195757600080fd5b919050565b60008083601f84011261196e57600080fd5b5081356001600160401b0381111561198557600080fd5b6020830191508360208260051b85010111156119a057600080fd5b9250929050565b600080600080606085870312156119bd57600080fd5b6119c685611940565b93506020850135925060408501356001600160401b038111156119e857600080fd5b6119f48782880161195c565b95989497509550505050565b600081518084526020808501945080840160005b83811015611a3057815187529582019590820190600101611a14565b509495945050505050565b6020815260006118716020830184611a00565b60008060008060408587031215611a6457600080fd5b84356001600160401b0380821115611a7b57600080fd5b611a878883890161195c565b90965094506020870135915080821115611aa057600080fd5b506119f48782880161195c565b60008060408385031215611ac057600080fd5b82359150611ad060208401611940565b90509250929050565b602080825260149082015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b600181811c90821680611b1b57607f821691505b602082108103611b3b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600f908201526e2737ba103a37b5b2b71037bbb732b960891b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611bad57600080fd5b8301803591506001600160401b03821115611bc757600080fd5b6020019150368190038213156119a057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006116a5602083018486611bdc565b60405160a081016001600160401b0381118282101715611c3b57611c3b611b6a565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611c6957611c69611b6a565b604052919050565b60006001600160401b03821115611c8a57611c8a611b6a565b5060051b60200190565b600082601f830112611ca557600080fd5b81516020611cba611cb583611c71565b611c41565b82815260059290921b84018101918181019086841115611cd957600080fd5b8286015b84811015611cf45780518352918301918301611cdd565b509695505050505050565b60006001600160401b03821115611d1857611d18611b6a565b50601f01601f191660200190565b600082601f830112611d3757600080fd5b8151611d45611cb582611cff565b818152846020838601011115611d5a57600080fd5b6116a582602083016020870161180e565b8051801515811461195757600080fd5b600060208284031215611d8d57600080fd5b81516001600160401b0380821115611da457600080fd5b9083019060a08286031215611db857600080fd5b611dc0611c19565b825182811115611dcf57600080fd5b611ddb87828601611c94565b825250602083015182811115611df057600080fd5b611dfc87828601611c94565b602083015250604083015182811115611e1457600080fd5b611e2087828601611d26565b604083015250606083015182811115611e3857600080fd5b611e4487828601611d26565b606083015250611e5660808401611d6b565b608082015295945050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611e8c57611e8c611e64565b5060010190565b7f68747470733a2f2f6170692e6368696d6572612d6465766d617463682e636f6d8152692f6d657461646174612f60b01b602082015260008251611ede81602a85016020870161180e565b91909101602a0192915050565b6000604082016040835280855480835260608501915086600052602092508260002060005b82811015611f2c57815484529284019260019182019101611f10565b50505083810382850152611f408186611a00565b9695505050505050565b600060208284031215611f5c57600080fd5b81516001600160401b0380821115611f7357600080fd5b9083019060408286031215611f8757600080fd5b604051604081018181108382111715611fa257611fa2611b6a565b604052825182811115611fb457600080fd5b611fc087828601611c94565b825250611fcf60208401611d6b565b602082015295945050505050565b6000611feb611cb584611c71565b80848252602080830192508560051b85013681111561200957600080fd5b855b818110156120805780356001600160401b0381111561202a5760008081fd5b870136601f82011261203c5760008081fd5b803561204a611cb582611cff565b818152368683850101111561205f5760008081fd5b8186840187830137600091810186019190915286525093820193820161200b565b50919695505050505050565b60408152600061209f6040830186611a00565b602083820381850152818583528183019050818660051b8401018760005b8881101561212c57858303601f190184528135368b9003601e190181126120e357600080fd5b8a0185810190356001600160401b038111156120fe57600080fd5b80360382131561210d57600080fd5b612118858284611bdc565b9587019594505050908401906001016120bd565b50909998505050505050505050565b634e487b7160e01b600052601260045260246000fd5b6000826121605761216061213b565b500490565b8181038181111561217857612178611e64565b92915050565b60008261218d5761218d61213b565b500690565b8082018082111561217857612178611e64565b601f8211156121ef57600081815260208120601f850160051c810160208610156121cc5750805b601f850160051c820191505b818110156121eb578281556001016121d8565b5050505b505050565b81516001600160401b0381111561220d5761220d611b6a565b6122218161221b8454611b07565b846121a5565b602080601f831160018114612256576000841561223e5750858301515b600019600386901b1c1916600185901b1785556121eb565b600085815260208120601f198616915b8281101561228557888601518255948401946001909101908401612266565b50858210156122a35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212208a1718beddc199a3be52fb6b7a913f690bdd147f0a8bae1375d3bcfb448ccb6064736f6c63430008140033";

type ERC7857AIAgentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC7857AIAgentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC7857AIAgents__factory extends ContractFactory {
  constructor(...args: ERC7857AIAgentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override deploy(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_verifier, overrides || {}) as Promise<
      ERC7857AIAgents & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC7857AIAgents__factory {
    return super.connect(runner) as ERC7857AIAgents__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC7857AIAgentsInterface {
    return new Interface(_abi) as ERC7857AIAgentsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC7857AIAgents {
    return new Contract(address, _abi, runner) as unknown as ERC7857AIAgents;
  }
}
