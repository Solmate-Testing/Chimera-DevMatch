/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockOracle,
  MockOracleInterface,
} from "../../contracts/MockOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "proofHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "MockProofVerified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verifyOwnership",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "dataHashes",
            type: "bytes32[]",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct IERC7857DataVerifier.OwnershipProofOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verifyTransferValidity",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "oldDataHashes",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "newDataHashes",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sealedKey",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct IERC7857DataVerifier.TransferValidityProofOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610857806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063043153f31461003b578063fbf8f60614610064575b600080fd5b61004e61004936600461042b565b610084565b60405161005b919061051e565b60405180910390f35b61007761007236600461042b565b6102a0565b60405161005b91906105ac565b6100b86040518060a00160405280606081526020016060815260200160608152602001606081526020016000151581525090565b816100fa5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064015b60405180910390fd5b60008080808061010c87890189610717565b6000818152602081905260409020549499509297509095509350915060ff161561016d5760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b60448201526064016100f1565b60008551116101be5760405162461bcd60e51b815260206004820152601b60248201527f4e6f206f6c642064617461206861736865732070726f7669646564000000000060448201526064016100f1565b600084511161020f5760405162461bcd60e51b815260206004820152601b60248201527f4e6f206e65772064617461206861736865732070726f7669646564000000000060448201526064016100f1565b60008181526020819052604090819020805460ff191660011790555161023890899089906107cc565b60405190819003812060018252907f8d315407e5e0c1caba36d89ac870f0ecf3446782201a510f25c57a00c755654d9060200160405180910390a2506040805160a0810182529485526020850193909352918301526060820152600160808201529392505050565b604080518082019091526060815260006020820152816102f25760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016100f1565b600080610301848601866107dc565b600081815260208190526040902054919350915060ff161561035a5760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b60448201526064016100f1565b60008251116103ab5760405162461bcd60e51b815260206004820152601760248201527f4e6f2064617461206861736865732070726f766964656400000000000000000060448201526064016100f1565b60008181526020819052604090819020805460ff19166001179055516103d490869086906107cc565b60405190819003812060018252907f8d315407e5e0c1caba36d89ac870f0ecf3446782201a510f25c57a00c755654d9060200160405180910390a25060408051808201909152908152600160208201529392505050565b6000806020838503121561043e57600080fd5b823567ffffffffffffffff8082111561045657600080fd5b818501915085601f83011261046a57600080fd5b81358181111561047957600080fd5b86602082850101111561048b57600080fd5b60209290920196919550909350505050565b600081518084526020808501945080840160005b838110156104cd578151875295820195908201906001016104b1565b509495945050505050565b6000815180845260005b818110156104fe576020818501810151868301820152016104e2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000825160a0602084015261053a60c084018261049d565b90506020840151601f1980858403016040860152610558838361049d565b9250604086015191508085840301606086015261057583836104d8565b925060608601519150808584030160808601525061059382826104d8565b9150506080840151151560a08401528091505092915050565b6020815260008251604060208401526105c8606084018261049d565b90506020840151151560408401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561061f5761061f6105e0565b604052919050565b600082601f83011261063857600080fd5b8135602067ffffffffffffffff821115610654576106546105e0565b8160051b6106638282016105f6565b928352848101820192828101908785111561067d57600080fd5b83870192505b8483101561069c57823582529183019190830190610683565b979650505050505050565b600082601f8301126106b857600080fd5b813567ffffffffffffffff8111156106d2576106d26105e0565b6106e5601f8201601f19166020016105f6565b8181528460208386010111156106fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561072f57600080fd5b853567ffffffffffffffff8082111561074757600080fd5b61075389838a01610627565b9650602088013591508082111561076957600080fd5b61077589838a01610627565b9550604088013591508082111561078b57600080fd5b61079789838a016106a7565b945060608801359150808211156107ad57600080fd5b506107ba888289016106a7565b95989497509295608001359392505050565b8183823760009101908152919050565b600080604083850312156107ef57600080fd5b823567ffffffffffffffff81111561080657600080fd5b61081285828601610627565b9560209490940135945050505056fea26469706673582212200927fb7c5d3935268fbf93957cbe4cf513a24fd521d4233eec01f7cfd31a567c64736f6c63430008140033";

type MockOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracle__factory extends ContractFactory {
  constructor(...args: MockOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockOracle__factory {
    return super.connect(runner) as MockOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleInterface {
    return new Interface(_abi) as MockOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockOracle {
    return new Contract(address, _abi, runner) as unknown as MockOracle;
  }
}
