/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC7857Metadata,
  IERC7857MetadataInterface,
} from "../../../contracts/interfaces/IERC7857Metadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "metadataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newMetadataURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "newMetadataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "updateProof",
        type: "bytes",
      },
    ],
    name: "updateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC7857Metadata__factory {
  static readonly abi = _abi;
  static createInterface(): IERC7857MetadataInterface {
    return new Interface(_abi) as IERC7857MetadataInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC7857Metadata {
    return new Contract(address, _abi, runner) as unknown as IERC7857Metadata;
  }
}
